version: '3.9'
services:
  backend-api:
    container_name: backend-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always
    depends_on:
      - mongo
      #      - postgres
      - redis
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ${FILES_UPLOAD_VOLUME}:/dist/src/${FILE_UPLOAD_PATH}
    networks:
      - web
      - backend

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - '27017:27017'
    restart: always
    networks:
      - backend
    volumes:
      - ~/etc/mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    links:
      - mongo
    networks:
      - backend
      - web
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
    depends_on:
      - mongo

  #  postgres:
  #    container_name: postgres
  #    image: "postgres:14-alpine"
  #    restart: always
  #    ports:
  #      - "5432:5432"
  #    volumes:
  #      - ~/etc/postgres/data:/var/lib/postgresql/data
  #    env_file:
  #      - docker.env
  #    networks:
  #      - postgres
  #
  #  pgadmin:
  #    links:
  #      - postgres:postgres
  #    container_name: pgadmin
  #    image: dpage/pgadmin4
  #    ports:
  #      - "8080:80"
  #    volumes:
  #      - ~/etc/postgres/pgadmin/data:/root/.pgadmin
  #    env_file:
  #      - .env
  #    networks:
  #      - postgres

  redis:
    container_name: redis
    image: 'redis:alpine'
    restart: always
    networks:
      - backend
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - ~/etc/redis/data:/data

  redis-commander:
    container_name: rediscommander
    image: 'rediscommander/redis-commander:latest'
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8082:8081'
    networks:
      - backend
    depends_on:
      - redis

networks:
  web:
    external: true
  backend:
    external: false
